---CREATING DATASET

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');

---Case Study Questions

--- 1. What is the total amount each customer spent at the restaurant?
SELECT customer_id, SUM(price) as total_amount
FROM sales s
Left JOIN menu m
ON s.product_id = m.product_id
GROUP BY customer_id;

--- 2.How many days has each customer visited the restaurant?
SELECT customer_id, COUNT(DISTINCT order_date) AS visited_count
FROM sales
GROUP BY customer_id;

--- 3.What was the first item from the menu purchased by each customer?
WITH ranking
AS(
	SELECT customer_id,product_name, ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY order_date) as rn
	FROM sales s
	JOIN menu m
	ON s.product_id	= m.product_id
	)
	SELECT customer_id, product_name, rn
	FROM ranking
	WHERE rn=1;

--- 4.What is the most purchased item on the menu and how many times was it purchased by all customers?
SELECT TOP 1 product_name, COUNT(product_name) AS item_count
FROM sales s
JOIN menu m
ON s.product_id	= m.product_id
GROUP BY product_name
ORDER BY item_count DESC

--- 5.Which item was the most popular for each customer?
WITH popularity
AS(
	SELECT customer_id, product_name, COUNT(product_name) AS item_count,
			DENSE_RANK() OVER(Partition by customer_id ORDER BY COUNT(product_name) desc) as rn
	FROM sales s
	JOIN menu m
	ON s.product_id	= m.product_id 
	GROUP BY customer_id, product_name
)
SELECT customer_id, product_name
FROM popularity
where rn = 1

--- 6.Which item was purchased first by the customer after they became a member?
WITH ranking
AS(
	SELECT s.customer_id,product_name, join_date,order_date, ROW_NUMBER() OVER(PARTITION BY s.customer_id ORDER BY s.order_date) as rn
	FROM sales s
	JOIN menu m
	ON s.product_id	= m.product_id
	JOIN members mb
	ON s.customer_id = mb.customer_id
	WHERE order_date >= join_date
	)
	SELECT customer_id, product_name
	FROM ranking
	WHERE rn=1

--- 7.Which item was purchased just before the customer became a member?
WITH ranking
AS(
	SELECT s.customer_id,product_name, join_date,order_date, DENSE_RANK() OVER(PARTITION BY s.customer_id ORDER BY s.order_date DESC) as rn
	FROM sales s
	JOIN menu m
	ON s.product_id	= m.product_id
	JOIN members mb
	ON s.customer_id = mb.customer_id
	WHERE order_date < join_date
	)
	SELECT customer_id, product_name
	FROM ranking
	WHERE rn=1

--- 8.What is the total items and amount spent for each member before they became a member?

SELECT s.customer_id,
		COUNT(*) AS total_count,
		SUM(price) AS total_price
FROM sales s
JOIN menu m
ON s.product_id	= m.product_id
JOIN members mb
ON s.customer_id = mb.customer_id
WHERE order_date < join_date
GROUP BY s.customer_id

--- 9.If each $1 spent equates to 10 points and sushi has a 2x points multiplier how many points would each customer have?
SELECT s.customer_id, 
SUM(CASE WHEN m.product_name = 'sushi' THEN 2 * 10 * m.price
		else 10 * price
	END) AS points
FROM sales s
JOIN menu m
ON s.product_id	= m.product_id
GROUP BY customer_id

--- 10.In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi 
--- how many points do customer A and B have at the end of January?
SELECT s.customer_id,
		SUM(CASE WHEN order_date >= join_date AND order_date <= DATEADD(DD,6,join_date) THEN 20 * price
				 WHEN product_name = 'sushi' Then 20*price
				 ELSE 10 * price
			END) AS points
FROM sales s
JOIN menu m
ON s.product_id	= m.product_id
JOIN members MB
ON s.customer_id = mb.customer_id
WHERE Month(order_date) = 1
GROUP BY s.customer_id
